{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from \"../components/MyButton\";\nimport { TextH1, TextParagraph } from \"../components/StyledText\";\nimport { imageIndex } from \"../constants/images\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(props) {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLogoColor = _React$useState2[0],\n    setLogoColor = _React$useState2[1];\n  function showHelp() {\n    props.navigation.replace('Root', {\n      screen: 'Help'\n    });\n  }\n  function toggleLogo() {\n    setLogoColor(!isLogoColor);\n  }\n  function showViewPeople() {\n    props.navigation.replace('Root', {\n      screen: 'People'\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsxs(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: [_jsx(View, {\n        style: Styles.homeLogoContainer,\n        children: _jsx(Pressable, {\n          onPress: toggleLogo,\n          children: _jsx(Image, {\n            source: imageIndex[isLogoColor ? 'logo' : 'mono'],\n            style: Styles.homeLogo\n          })\n        })\n      }), _jsx(View, {\n        style: Styles.homeHeadingContainer,\n        children: _jsx(Text, {\n          style: Styles.homeHeading,\n          children: \"Employee Management System\"\n        })\n      }), _jsxs(View, {\n        style: Styles.homeButtonContainer,\n        children: [_jsx(MyButton, {\n          text: \"People\",\n          type: \"major\",\n          size: \"large\",\n          onPress: showViewPeople,\n          buttonStyle: Styles.homeButton\n        }), _jsx(MyButton, {\n          text: \"help\",\n          type: \"default\",\n          size: \"large\",\n          onPress: showHelp,\n          buttonStyle: Styles.homeButton\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: 20\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: 'darkgray',\n            fontSize: 20\n          },\n          children: \"Developed by\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 25\n          },\n          children: \"Huizi Li\"\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Image","Text","View","ScrollView","Pressable","SafeAreaView","Settings","Styles","MyButton","TextH1","TextParagraph","imageIndex","jsx","_jsx","jsxs","_jsxs","HomeScreen","props","_React$useState","useState","_React$useState2","_slicedToArray","isLogoColor","setLogoColor","showHelp","navigation","replace","screen","toggleLogo","showViewPeople","style","safeAreaView","children","container","contentContainerStyle","contentContainer","homeLogoContainer","onPress","source","homeLogo","homeHeadingContainer","homeHeading","homeButtonContainer","text","type","size","buttonStyle","homeButton","flexDirection","justifyContent","alignItems","marginTop","color","fontSize"],"sources":["C:/project/steftest1/screens/HomeScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { Image, Text, View, ScrollView, Pressable } from 'react-native';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\n\r\n// Import helper code\r\nimport Settings from '../constants/Settings';\r\n\r\n// Import styling and components\r\nimport Styles from \"../styles/MainStyle\";\r\nimport { MyButton } from '../components/MyButton';\r\nimport { TextH1, TextParagraph } from \"../components/StyledText\";\r\nimport { imageIndex } from '../constants/images';\r\n\r\n\r\nexport default function HomeScreen(props) {\r\n\r\n  const [isLogoColor,setLogoColor] = React.useState(true);\r\n\r\n  function showHelp() {\r\n    props.navigation.replace('Root', {screen: 'Help'});\r\n  }\r\n\r\n  function toggleLogo(){\r\n    setLogoColor(!isLogoColor)\r\n  }\r\n\r\n  function showViewPeople() {\r\n    props.navigation.replace('Root', {screen: 'People'});\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <SafeAreaView style={Styles.safeAreaView}>\r\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\r\n        \r\n      <View style = {Styles.homeLogoContainer}>\r\n        <Pressable onPress={toggleLogo}>\r\n        <Image source = {imageIndex[isLogoColor ? 'logo':'mono']} style ={Styles.homeLogo}/>  \r\n        </Pressable>\r\n      </View> \r\n\r\n       <View style={Styles.homeHeadingContainer}>\r\n          <Text style={Styles.homeHeading}>Employee Management System</Text>\r\n      </View>\r\n        \r\n        <View style={Styles.homeButtonContainer}>\r\n          <MyButton\r\n            text=\"People\"\r\n            type=\"major\"      // default*|major|minor\r\n            size=\"large\"      // small|medium*|large\r\n            onPress={showViewPeople}\r\n            buttonStyle = {Styles.homeButton}\r\n          />\r\n\r\n          <MyButton\r\n            text=\"help\"\r\n            type=\"default\"      // default*|major|minor\r\n            size=\"large\"      // small|medium*|large\r\n            onPress={showHelp}\r\n            buttonStyle = {Styles.homeButton}\r\n          />\r\n        </View>\r\n        <View style={{ flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginTop: 20 }}>\r\n  <Text style={{ color: 'darkgray', fontSize: 20 }}>Developed by</Text>\r\n  <Text style={{ fontSize: 25 }}>Huizi Li</Text>\r\n</View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}